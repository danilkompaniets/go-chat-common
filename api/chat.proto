syntax = "proto3";

option go_package = "/gen-chat";

package chat;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

message Chat {
  int64 id = 1;
  string type = 2;
  string title = 3;
  int64 created_by = 4;
  google.protobuf.Timestamp updated_at = 5;
}

// Модель сообщения
message Message {
  int64 id = 1;
  int64 chat_id = 2;
  int64 sender_id = 3;
  string content = 4;
  google.protobuf.Timestamp sent_at = 5;
}

// Запрос на создание чата
message CreateChatRequest {
  string title = 1;
  repeated int64 member_ids = 2;
}

message CreateChatResponse {
}

message ListChatsRequest {
}

message ListChatsResponse {
  repeated Chat chats = 1;
}

// Запрос на отправку сообщения
message SendMessageRequest {
  int64 chat_id = 1;
  string content = 2;
}

message SendMessageResponse {
}

// Получение истории сообщений
message GetMessagesRequest {
  int64 chat_id = 1;
  int32 limit = 2;
  int64 before_message_id = 3; // для пагинации
}

message GetMessagesResponse {
  repeated Message messages = 1;
}

// Стрим новых сообщений
message StreamMessagesRequest {
  int64 chat_id = 1;
}

service ChatService {
  rpc CreateChat(CreateChatRequest) returns (CreateChatResponse) {
    option (google.api.http) = {
      post: "/api/v1/chats"
      body: "*"
    };
  }

  rpc ListChats(ListChatsRequest) returns (ListChatsResponse) {
    option (google.api.http) = {
      get: "/api/v1/chats"
    };
  }

  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse) {
    option (google.api.http) = {
      post: "/api/v1/chats/{chat_id}/messages"
      body: "*"
    };
  }

  rpc GetMessages(GetMessagesRequest) returns (GetMessagesResponse) {
    option (google.api.http) = {
      get: "/api/v1/chats/{chat_id}/messages"
    };
  }
}